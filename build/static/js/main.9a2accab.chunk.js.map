{"version":3,"sources":["state/reducer.ts","state/state.tsx","components/navbar/navItem/NavItem.tsx","components/navbar/Navbar.tsx","components/stars/stars/FullStart.tsx","components/stars/stars/HalfStar.tsx","components/stars/stars/EmptyStar.tsx","components/stars/ProductStars.tsx","components/products/ProductCard/ProductCard.tsx","components/products/Products.tsx","components/searchbar/Searchbar.tsx","utils/constants.ts","services/items.ts","components/pagination/PaginationButtons/PaginationButton.tsx","components/pagination/Pagination.tsx","components/pages/home/Home.tsx","components/pages/deals/Deals.tsx","components/pages/cart/cartItem/CartItem.tsx","components/notifications/Notification.tsx","services/cart.ts","components/pages/cart/Cart.tsx","components/pages/item_page/Item.tsx","components/pages/admin/Admin.tsx","components/pages/thankyou/Thankyou.tsx","services/user.ts","components/pages/login/Login.tsx","components/pages/protected/ProtectedRoute.tsx","components/pages/unauthorized/unAuthorized.tsx","components/pages/signup/Signup.tsx","App.tsx","index.tsx"],"names":["setUser","user","type","payload","setCart","cart","addToCart","item","quantity","reducer","state","action","itemInCart","find","i","id","updatedItemInCart","totalPrice","price","filteredCartItems","filter","itemToAddToCart","itemToIncrease","itemInCartToIncrease","indexOfItemInCartToIncrease","findIndex","newIncreasedCartItems","map","decreasedItemInCart","itemInCartToDecrease","indexOfItemInCartToDecrease","newDecreasedCartItems","IDToRemove","newCartItems","console","log","initialState","StateContext","createContext","StateProvider","children","useReducer","dispatch","Provider","value","useStateValue","useContext","NavItem","navName","linkTo","sign_in","cartItems","className","pillNotification","length","to","exact","activeClassName","size","MyNavbar","userState","history","useHistory","signInButton","name","onClick","window","localStorage","removeItem","push","style","color","role","FullStar","width","height","viewBox","version","xmlns","stroke","strokeWidth","fill","fillRule","d","points","ProductStars","average_rating","stars","number_of_full_stars","Math","trunc","number_of_half_stars","number_of_empty_stars","HalfStar","EmptyStar","ProductCard","imgUrl","isOnSale","item_id","description","stockCount","toCart","src","alt","imageUrl","avgRating","Products","items","Searchbar","handleSearch","useState","searchedItem","setSearchedItem","search","event","preventDefault","onSubmit","placeholder","onChange","target","constants","PAGE_SIZE","upload","formdata","a","axios","post","response","data","getItem","get","fetchItemList","from","sortField","sortDir","q","params","itemLists","itemServices","NavButtons","currentPage","allPages","nextPage","prevPage","firstPage","lastPage","disabled","Pagination","updatePage","page","totalItems","number_of_pages","ceil","PaginationButton","Home","setItems","isLoading","setIsLoading","setTotalItems","setPage","setSearch","useEffect","fetch_data","services","data_items","total","searchItem","Deals","deals","setDeals","fetch_deals","response_deals","deals_to_display","CartItem","notify","increaseItem","decreaseItem","remove","stockStyle","deleteIcon","strokeLinecap","strokeLinejoin","increaseIcon","message","class","undefined","decreaseIcon","toFixed","CartNotification","token","getCart","config","headers","authorization","saveCart","cartServices","setToken","t","Cart","notification","setNotification","setTimeout","updateIncreaseCartItem","increaseItemInCart","updateDecreaseCartItem","decreaseItemInCart","removeItemFromCart","saveCurrentcart","status","total_prices_array","cart_item","all_total_prices","reduce","acc","current_val","Notification","Item","React","setItem","item_number","setItemNumber","error_displayed","setErrorMessage","addedToCartMessage","setAddedToCartMessage","cartItem","useParams","fetch_item","fetched_item","disable","disableClass","Admin","isChecked","setName","setDescription","setAvgRating","setIsOnsale","setStockCount","setPrice","image","setImage","element","document","getElementById","checked","onFormSubmit","property","formData","FormData","append","htmlFor","e","min","max","Number","files","thankyou","login","credentials","signup","newUser","userServices","Login","email","setEmail","password","setPassword","rememberMe","setRememberMe","handleLogin","userService","JSON","stringify","required","autoFocus","ProtectedRoute","Component","component","rest","render","props","pathname","unAuthorized","Signup","username","setUsername","handleSignup","App","loggedUser","parse","cartService","Navbar","path","Thankyou","ReactDOM"],"mappings":"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","file":"static/js/main.9a2accab.chunk.js","sourcesContent":["import {  User, CartItemType, ItemType } from \"../../types\";\nimport { State } from './state';\nimport { setStateType } from \".\";\n\nexport type Action = \n        |{\n            type: \"INIT_STATE\",\n            payload: []\n        }       \n        |{\n            type: \"SET_USER\",\n            payload: User\n        }\n        |{\n            type: \"SET_CART\",\n            payload: CartItemType[]\n        }\n        |{\n            type: \"ADD_TO_CART\",\n            payload: {item: ItemType, quantity: number}\n        }\n       |{\n           type: \"INCREASE_ITEM_IN_CART\",\n           payload: CartItemType\n       }\n       |{\n        type: \"DECREASE_ITEM_IN_CART\",\n        payload: CartItemType\n       }\n       |{\n        type: \"REMOVE_ITEM_FROM_CART\",\n        payload: string\n       };\n\nexport const initiateState = (): Action => {\n    return { type: \"INIT_STATE\", payload: [] };\n};\nexport const setUser = (user: User): Action => {\n    return { type: \"SET_USER\", payload: user };\n};\n\nexport const setCart = (cart: CartItemType[]): Action => {\n    return { type: \"SET_CART\", payload: cart };\n};\n\nexport const addToCart = (item: ItemType, quantity: number): Action => {\n    return { type: \"ADD_TO_CART\", payload: {item: item, quantity: quantity} };\n};\n\nexport const increaseItemInCart = (item: CartItemType): Action => {\n    return { type: \"INCREASE_ITEM_IN_CART\", payload: item };\n};\n\nexport const decreaseItemInCart = (item: CartItemType): Action => {\n    return { type: \"DECREASE_ITEM_IN_CART\", payload: item };\n};\n\nexport const removeItemFromCart = (id: string): Action => {\n    return { type: \"REMOVE_ITEM_FROM_CART\", payload: id };\n};\n\nexport const reducer = (state: State, action: Action): State => {\n    switch (action.type) {\n        case \"INIT_STATE\":\n            return {\n                cart: [],\n                user: null\n            };\n\n        case \"SET_USER\":\n            return {\n                ...state,\n                user: action.payload\n            };\n\n        case \"SET_CART\":\n            return {\n                ...state,\n                cart: action.payload\n            };\n        \n        case \"ADD_TO_CART\": {\n            // When Add to Cart Button is clicked to add new item to cart and that item was already inside the Cart\n            // If item in cart, find it and update its quantity\n            const itemInCart = state.cart.find(i => i.id === action.payload.item.id);\n            \n            if (itemInCart) {\n                // Update the item by incrementing the quantity\n                const updatedItemInCart: CartItemType = {\n                    ...itemInCart,\n                    quantity: itemInCart.quantity + 1,\n                    totalPrice: (itemInCart.quantity +1) * itemInCart.price\n                };\n                // filterout the old item from the cart\n                const filteredCartItems = state.cart.filter(i => i.id !== itemInCart.id);\n\n                return {\n                    ...state,\n                    cart: [...filteredCartItems, updatedItemInCart]\n                };\n\n            } else {  // else add it to cart since it's not yet in the cart\n                const itemToAddToCart: CartItemType = {\n                    ...action.payload.item,\n                    quantity: action.payload.quantity,\n                    totalPrice: action.payload.quantity * action.payload.item.price\n                };\n                return {\n                    ...state,\n                    cart: [...state.cart, itemToAddToCart]\n                };\n            }\n        }\n        \n        case \"INCREASE_ITEM_IN_CART\": {\n            const itemToIncrease: CartItemType = action.payload;\n            // find item in cart\n            const itemInCartToIncrease: CartItemType | undefined = state.cart.find(i => i.id === itemToIncrease.id);\n            // find it's index, this is to put that item back at that index\n            const indexOfItemInCartToIncrease = state.cart.findIndex(i => i.id === itemToIncrease.id);\n            // update the item's quantity and total price\n            let updatedItemInCart: CartItemType;\n            if (itemInCartToIncrease) {\n                    updatedItemInCart = {\n                    ...itemInCartToIncrease,\n                    quantity: itemInCartToIncrease.quantity + 1,\n                    totalPrice: itemInCartToIncrease.totalPrice + itemInCartToIncrease.price \n                };\n            }\n            // create a new array of cart items by maintaining all the other items and replacing\n            // the item updated to it's exact index\n            const newIncreasedCartItems: CartItemType[] = state.cart.map((item, i) =>  {\n                if (i === indexOfItemInCartToIncrease) {\n                    return updatedItemInCart;\n                }\n                return item;\n            });\n            return {\n                ...state,\n                cart: newIncreasedCartItems\n            };\n        }\n\n        case \"DECREASE_ITEM_IN_CART\": {\n            const item = action.payload;\n            // find item in cart\n            const itemInCartToDecrease: CartItemType | undefined = state.cart.find(i => i.id === item.id);\n            // find it's index, this is to put that item back at that index\n            const indexOfItemInCartToDecrease = state.cart.findIndex(i => i.id === item.id);\n            // update the item's quantity and total price\n            let decreasedItemInCart: CartItemType;\n            if (itemInCartToDecrease) {\n                    decreasedItemInCart = {\n                    ...itemInCartToDecrease,\n                    quantity: itemInCartToDecrease.quantity - 1,\n                    totalPrice: itemInCartToDecrease.totalPrice - itemInCartToDecrease.price \n                };\n            }\n\n            // create a new array of cart items by maintaining all the other items and replacing\n            // the item updated to it's exact index\n            const newDecreasedCartItems: CartItemType[] = state.cart.map((item, i) =>  {\n                if (i === indexOfItemInCartToDecrease) {\n                    return decreasedItemInCart;\n                }\n                return item;\n            });\n\n            return {\n                ...state,\n                cart: newDecreasedCartItems\n            };\n        }\n\n        case \"REMOVE_ITEM_FROM_CART\": {\n            const IDToRemove = action.payload;\n            const newCartItems = state.cart.filter(item => item.id !== IDToRemove);\n            console.log(newCartItems);\n            \n            return {\n                ...state,\n                cart: newCartItems\n            };\n        }\n\n        default:\n            return state;\n    }\n};","import React, { createContext, useReducer, useContext } from \"react\";\nimport { User, CartItemType } from \"../../types\";\nimport { Action, reducer } from \"./reducer\";\n\nexport type State = {\n    user: User | null,\n    cart: CartItemType[]\n};\n\nconst initialState: State = {\n    user: null,\n    cart: []\n};\n\nexport const StateContext = createContext<[State, React.Dispatch<Action>]>([\n    initialState,\n    () => initialState\n]);\n\ntype StateProp = {\n    children: React.ReactElement\n};\n\nexport const StateProvider: React.FC<StateProp> = ({children}: StateProp) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    return (\n            <StateContext.Provider value={[state, dispatch]}>\n                {children}\n            </StateContext.Provider>\n        );\n};\n\nexport const useStateValue = () =>useContext(StateContext);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { FaCartArrowDown } from 'react-icons/fa';\n\nimport './navItem.css';\nimport { useStateValue } from '../../../state';\n\ntype NavItemProp = {\n    navName: string\n    linkTo: string\n    sign_in?: boolean\n};\n\nconst NavItem = ({navName, linkTo, sign_in}: NavItemProp) => {\n    const [state] = useStateValue();\n    const cartItems = state.cart;\n\n    let className = \"nav-item mx-2\";\n    if (sign_in) {\n        className = className + \" sign_in\";\n    }\n    if (navName === 'Cart') {\n\n        const pillNotification = cartItems && cartItems.length !== 0 ? <div className=\"icon-tag\">{cartItems.length}</div> : null;\n        \n        return <li className={`${className} `}>\n                <NavLink\n                    id=\"cart\"\n                    to={linkTo}\n                    exact \n                    className=\"nav-link text-white font-weight-bold icon-block nav-item\" \n                    activeClassName=\"active\">\n                    {navName}  <FaCartArrowDown size={25} />\n                    {pillNotification}\n                </NavLink>\n            </li>;\n    }\n    if (navName === 'Admin') {\n        \n        return <li className={`${className} admin`}>\n                <NavLink \n                    to={linkTo}\n                    exact \n                    className=\"nav-link text-white font-weight-bold\">\n                    {navName}\n                </NavLink>\n            </li>;\n    }\n    return <li className={`${className} `}>\n                <NavLink \n                    to={linkTo}\n                    exact \n                    className=\"nav-link text-white font-weight-bold nav-item\" \n                    activeClassName=\"active\">\n                    {navName}\n                </NavLink>\n            </li>;\n};\n\nexport default NavItem;","import React from \"react\";\nimport { Link, useHistory } from 'react-router-dom';\nimport { FaBars } from 'react-icons/fa';\nimport NavItem from './navItem/NavItem';\nimport './navbar.css';\nimport { useStateValue, initiateState } from \"../../state\";\n\n// import { Navbar, Nav, Container, Col, Row } from \"react-bootstrap\";\n// import { Container } from \"react-bootstrap/lib/Tab\";\n\nconst MyNavbar = () => {\n    const [state, dispatch] = useStateValue();\n\n    const userState = state.user;\n    \n    const history = useHistory();\n\n    const handleLogout = () => {\n        dispatch(initiateState());\n        window.localStorage.removeItem('loggedUser');\n        history.push('/login');\n    };\n\n    const signInButton = userState === null\n        ? <NavItem sign_in navName=\"Sign In\" linkTo='/login' />\n        : <div className=\"px-4 m-0 text-white\">\n            <div>{userState.name}</div>\n            <div className=\"logout\" onClick={handleLogout}>logout</div>\n          </div>;\n\n    return (\n        <nav className=\"navbar navbar-expand-md navbar-light py-2 head_bar\">\n                <button className=\"navbar-toggler text-white\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarToggler\" aria-controls=\"navbarToggler\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <FaBars className=\"navbar-toggler-icon\" style={{color:\"white\"}} />\n                </button>\n                <Link to='/' className=\"navbar-brand display-1 text-white font-weight-bolder\">Super Store</Link>\n\n            <div className=\"d-flex justify-content-end collapse navbar-collapse\" id=\"navbarToggler\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <NavItem navName=\"Home\" linkTo='/' />\n                    <NavItem navName=\"Deals\" linkTo='/deals' />\n                    <NavItem navName=\"Cart\" linkTo='/cart' />\n                    {userState && userState.role === 'admin' ? <NavItem navName=\"Admin\" linkTo='/admin' /> : null}\n                    {signInButton}\n                </ul>\n            </div>\n        </nav>\n        // <Navbar className=\"head_bar\" expand=\"lg\">\n        //     <Navbar.Brand>\n        //         <Link to='/' className=\"navbar-brand display-1 text-white font-weight-bolder\">Super Store</Link>\n        //     </Navbar.Brand>\n\n        //     <Navbar.Toggle color=\"white\" className=\"text-white\"/>\n        //     <Navbar.Collapse>\n        //         <Nav>\n        //             <Nav.Link><NavItem navName=\"Home\" linkTo='/' /></Nav.Link>\n        //             <Nav.Link><NavItem navName=\"Deals\" linkTo='/deals' /></Nav.Link>\n        //             <Nav.Link><NavItem navName=\"Cart\" linkTo='/cart' /></Nav.Link>\n        //             <Nav.Link><NavItem navName=\"Cart\" linkTo='/cart' />{userState && userState.role === 'admin' ? <NavItem navName=\"Admin\" linkTo='/admin' /> : null}</Nav.Link>\n        //             <Nav.Link>{signInButton}</Nav.Link>\n        //         </Nav>\n        //     </Navbar.Collapse>\n\n            \n        // </Navbar>\n        // <Navbar collapseOnSelect className=\"head_bar\" expand=\"lg\" variant=\"dark\">\n        //         <Navbar.Brand href=\"/\">SuperStore</Navbar.Brand>\n        //         <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        //         <Navbar.Collapse className=\"d-flex justify-content-end align-items-center\" id=\"responsive-navbar-nav\">\n                \n        //             <Nav className=\"ml-auto\">\n        //                 <NavItem navName=\"Home\" linkTo='/' />\n        //                 <NavItem navName=\"Deals\" linkTo='/deals' />\n        //                 <NavItem navName=\"Cart\" linkTo='/cart' />{userState && userState.role === 'admin' ? <NavItem navName=\"Admin\" linkTo='/admin' /> : null}\n        //                 <Nav.Link>{signInButton}</Nav.Link>\n        //             </Nav>\n        //         </Navbar.Collapse>\n        // </Navbar>\n        );\n};\n\nexport default MyNavbar;","import React from 'react';\n\nconst FullStar: React.FC = (): JSX.Element => {\n    return (\n            <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 64 64\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n                <title>star-full</title>\n                <desc>Created with Sketch.</desc>\n                <g id=\"star-full\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                    <path d=\"M31.4885496,3.11613455 L22.2702274,21.5136178 L1.67622723,24.4611015 L16.5775637,38.7678904 L13.0578457,58.980827 L31.4885496,49.4369407 L49.9192536,58.980827 L46.3995355,38.7678904 L61.300872,24.4611015 L40.7068718,21.5136178 L31.4885496,3.11613455 Z\" id=\"Star\" stroke=\"#E7B811\" fill=\"#F6C415\"></path>\n                </g>\n            </svg>\n    );\n};\n\nexport default FullStar;","import React from 'react';\n\nconst FullStar: React.FC = (): JSX.Element => {\n    return (\n            <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 64 64\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n                <title>Artboard</title>\n                <desc>Created with Sketch.</desc>\n                <g id=\"Artboard\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                    <polygon id=\"Star\" fill=\"#F6C415\" points=\"32 50.2781955 13.1908719 60.0180394 16.7830957 39.3887189 1.56619148 24.7789531 22.595436 21.7691758 32 3\"></polygon>\n                    <path d=\"M32,4.11613455 L22.9252589,22.2270655 L2.65231591,25.1285984 L17.3213333,39.2123374 L13.8564583,59.1103226 L32,49.7151362 L50.1435417,59.1103226 L46.6786667,39.2123374 L61.3476841,25.1285984 L41.0747411,22.2270655 L32,4.11613455 Z\" id=\"Star-Copy-4\" stroke=\"#E7B811\"></path>\n                </g>\n            </svg>\n    );\n};\n\nexport default FullStar;","import React from 'react';\n\nconst FullStar: React.FC = (): JSX.Element => {\n    return (\n            <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 64 64\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n                <title>star-empty</title>\n                <desc>Created with Sketch.</desc>\n                <g id=\"star-empty\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                    <path d=\"M32,4.11613455 L22.9252589,22.2270655 L2.65231591,25.1285984 L17.3213333,39.2123374 L13.8564583,59.1103226 L32,49.7151362 L50.1435417,59.1103226 L46.6786667,39.2123374 L61.3476841,25.1285984 L41.0747411,22.2270655 L32,4.11613455 Z\" id=\"Star-Copy-4\" stroke=\"#E7B811\"></path>\n                </g>\n            </svg>\n    );\n};\n\nexport default FullStar;","import React from 'react';\r\nimport FullStar from './stars/FullStart';\r\nimport HalfStar from './stars/HalfStar';\r\nimport EmptyStar from './stars/EmptyStar';\r\n\r\nconst ProductStars: React.FC<{average_rating: number}> = ({average_rating}: {average_rating: number}): JSX.Element => {\r\n    const stars = [];\r\n\r\n    const number_of_full_stars = Math.trunc(average_rating);\r\n    const number_of_half_stars = average_rating % 1 > 0 ? 1 : 0;\r\n    const number_of_empty_stars = 5 - (number_of_full_stars+number_of_half_stars);\r\n\r\n    for (let i = 0; i < number_of_full_stars; i++) {\r\n        stars.push(<FullStar key={`full_star_${i}`}/>);\r\n    }\r\n    for (let i = 0; i < number_of_half_stars; i++) {\r\n        stars.push(<HalfStar key={`half_star_${i}`}/>);\r\n    }\r\n    for (let i = 0; i < number_of_empty_stars; i++) {\r\n        stars.push(<EmptyStar key={`empty_star_${i}`}/>);\r\n    }\r\n\r\n    return <>{stars}</>;\r\n};\r\n\r\nexport default ProductStars;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ItemType } from '../../../../types';\n\nimport ProductStars from '../../stars/ProductStars';\n\nimport './ProductCard.css';\n\ninterface ProductProp {\n    imgUrl: string,\n    description: string\n    price: number,\n    name: string,\n    average_rating: number,\n    isOnSale: boolean,\n    item_id: string,\n    stockCount: number\n    toCart: (item: ItemType) => void\n}\n\nconst ProductCard = ({imgUrl, price, name, average_rating, isOnSale, item_id, description, stockCount, toCart}: ProductProp) => {\n\n    const sendToAddToCart = () => {\n        const item: ItemType = {\n            imageUrl: imgUrl,\n            description: description,\n            price: price,\n            name: name,\n            avgRating: average_rating,\n            isOnSale: isOnSale,\n            id: item_id,\n            stockCount: stockCount\n        };\n        toCart(item);\n    };\n\n    return (\n        <div className=\"card\">\n            <div className=\"center pt-3\"><img className=\"card-img-top img\" src={imgUrl} alt={name} /></div>\n            <div className=\"card-body\">\n                <p className=\"mb-0\"><Link to={`item/${item_id}`}>{name}</Link></p>\n                <ProductStars average_rating={average_rating} />\n                <div>\n                    <p className=\"card-text\">\n                        <strong>\n                            ${price}\n                            { isOnSale && <span className=\"onSale ml-2\">On Sale</span>}\n                        </strong>\n                    </p>\n                </div>\n            </div>\n            <div className='my-3 d-flex justify-content-between'>\n                <Link to={`item/${item_id}`} className=\"btn btn-primary center\">View Item</Link>\n                <button className=\"btn center add_cart\" onClick={sendToAddToCart}>Add to Chart</button>\n            </div>\n        </div>\n    );\n};\n\nexport default ProductCard;","import React from 'react';\n\nimport ProductCard from './ProductCard/ProductCard';\nimport './products.css';\nimport { ItemType } from '../../../types';\n\ninterface ProductsProp {\n    items: ItemType[],\n    toCart: (item: ItemType) => void\n}\nconst Products = ({items, toCart}: ProductsProp) => {\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                {items.map(item => {\n                    return (\n                        <div className=\"col-md-4 col-sm-6 my-3\" key={item.id}>\n                            <ProductCard\n                                    name={item.name}\n                                    imgUrl={item.imageUrl} \n                                    description={item.description} \n                                    price={item.price}\n                                    average_rating={item.avgRating}\n                                    isOnSale={item.isOnSale}\n                                    item_id={item.id}\n                                    stockCount={item.stockCount}\n                                    toCart={toCart}\n                                />\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default Products;","import React, { useState } from 'react';\n\nimport { BsSearch } from 'react-icons/bs';\n\nimport './searchbar.css';\n\ninterface SearchProp {\n    handleSearch: (searchedItem: string) => void\n}\n\nconst Searchbar = ({handleSearch}: SearchProp) => {\n    const [searchedItem, setSearchedItem] = useState('');\n\n    const search = (event: React.FormEvent<HTMLFormElement> | React.MouseEvent<HTMLElement>) => {\n        console.log(\"Try to prevent default\");\n        event.preventDefault();\n        console.log(\"Tried to prevent default\");\n        handleSearch(searchedItem);\n    };\n\n    const changeHandler = ({target}: React.ChangeEvent<HTMLInputElement>) => {\n        setSearchedItem(target.value);\n        if (target.value === '') {\n            handleSearch('');\n        }\n    };\n\n    return <div className=\"row search\">\n                <div className=\"col-sm-3 offset-sm-4 mt-3 mb-2\">\n                    <form onSubmit={search} className=\"input-group md-form form-sm form-2 pl-0\">\n                            <input \n                                className=\"form-control my-0 py-1 amber-border\" \n                                type=\"search\" \n                                placeholder=\"Search\" \n                                aria-label=\"Search\"\n                                onChange={changeHandler} />\n                        <div className=\"input-group-append\">\n                            <span \n                                className=\"input-group-text amber lighten-3  bg-warning\" \n                                id=\"basic-text1\">\n                                <i className=\"fas fa-search text-grey\" aria-hidden=\"true\" onClick={search}><BsSearch /></i>\n                            </span>\n                        </div>\n                    </form>\n                </div>\n            </div>;\n};\n\nexport default Searchbar;","const PAGE_SIZE = 6;\n\nconst constants = { PAGE_SIZE };\n\nexport default constants;","import axios from 'axios';\nimport { ItemType } from '../../types';\nimport constants from '../utils/constants';\n\nconst baseUrl = '/';\n\nexport const upload = async (formdata: any) => {\n    const response = await axios.post(`${baseUrl}item/upload`, formdata);\n    return response.data;\n};\n\nconst getItem = async (id: string) => {    \n    const response = await axios.get<ItemType>(`${baseUrl}item/${id}`);\n    return response.data;\n};\n\nexport interface FetchItemType {\n    from: number,\n    sortField?: string,\n    sortDir?: string,\n    isOnSale: boolean,\n    q?: string\n}\n\nconst fetchItemList = async ({ from, sortField, sortDir, isOnSale, q }: FetchItemType) => {\n\n    const itemLists = await axios\n                                .get<any>(`${baseUrl}item/list`, {\n                                    params: {\n                                        from,\n                                        size: constants.PAGE_SIZE,\n                                        sortField,\n                                        sortDir,\n                                        isOnSale,\n                                        q,\n                                    },\n                                });\n    \n    return itemLists.data;\n       \n};\n\n\n\n\nconst itemServices = { fetchItemList, getItem };\n\nexport default itemServices;","import React from 'react';\n\nimport './paginationButton.css';\n\ninterface NavButtonProp {\n    currentPage: number,\n    allPages: number,\n    nextPage: () => void,\n    prevPage: () => void,\n    firstPage: () => void,\n    lastPage: () => void,\n}\n\nconst NavButtons = ({currentPage, allPages, nextPage, prevPage, firstPage, lastPage}: NavButtonProp) => {\n\n    return (\n        <div className=\"pagination-button text-center mb-4 mt-4\">\n            <button className=\"mx-3\"  onClick={() => firstPage()} disabled={currentPage===1}>First</button>\n            <button onClick={() => prevPage()} disabled={currentPage===1}> &lt; </button>\n            <span className=\"mx-3\">{allPages ? currentPage:null} - {allPages ? allPages:null}</span>\n            <button onClick={() => nextPage()} disabled={currentPage===allPages}> &gt; </button>\n            <button className=\"mx-3\"  onClick={() => lastPage()} disabled={currentPage===allPages}>Last</button>\n        </div>\n    );\n};\n\nexport default NavButtons;","import React from 'react';\nimport PaginationButton from './PaginationButtons/PaginationButton';\nimport constants from '../../utils/constants';\n\nconst PAGE_SIZE = constants.PAGE_SIZE;\n\ninterface PaginationProp {\n    updatePage: (page: number) => void,\n    page: number,\n    totalItems: number | undefined | null\n}\n\nconst Pagination = ({updatePage, page, totalItems}: PaginationProp) => {\n\n    const number_of_pages = totalItems ? Math.ceil(totalItems/PAGE_SIZE) : 0;\n\n    const handleNextPage = () => {\n        updatePage(page+1);\n    };\n\n    const handlePreviousPage = () => {\n        updatePage(page - 1);\n    };\n\n    const handleFirstPage = () => {\n        updatePage(1);\n    };\n\n    const handleLastPage = () => {\n        updatePage(number_of_pages);\n    };\n\n    return (\n        <PaginationButton \n            currentPage={page} \n            allPages={number_of_pages}\n            nextPage={handleNextPage}\n            prevPage={handlePreviousPage}\n            firstPage={handleFirstPage}\n            lastPage={handleLastPage}\n        />\n    );\n};\n\nexport default Pagination;","import React, { useState, useEffect } from 'react';\nimport Products from '../../products/Products';\nimport SearchBar from '../../searchbar/Searchbar';\nimport services from '../../../services/items';\nimport { addToCart, useStateValue } from '../../../state';\nimport './home.css';\nimport Pagination from '../../pagination/Pagination';\nimport constants from '../../../utils/constants';\nimport { ItemType } from '../../../../types';\n\n// avgRating: 4\n// description: \"Men shoe white color\"\n// id: \"6096f909d37ecb3d2e2c4a20\"\n// imageUrl: \"https://as1.ftcdn.net/v2/jpg/02/76/37/72/500_F_276377230_EgsMAmg8j0d7FprWRqUsid7moq0Knh9r.jpg\"\n// isOnSale: true\n// name: \"Men Shoe White\"\n// price: 99\n// stockCount: 300\n\nconst Home = () => {\n    const [state, dispatch] = useStateValue();\n    const [items, setItems] = useState([]);\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n    const [totalItems, setTotalItems] = useState<number>();\n    const [page, setPage] = useState<number>(1);\n    const [search, setSearch] = useState<string | undefined>('');\n\n    // eslint-disable-next-line\n    useEffect(() => {\n        // fetches for all the data in the backend\n        const fetch_data = async () => {\n            // Calculate the \"from\" of the query params \n            const request_from = (page - 1) * constants.PAGE_SIZE;\n            const params = {\n                from: request_from,\n                q: search,\n                isOnSale: false\n            };\n            // Get the items of the backend for the current page\n            // const data_items = await fetchItemList(params)\n            const data_items = await services.fetchItemList(params);\n            // Set number of pages in pagination\n            setTotalItems(data_items.total);\n            setItems(data_items.items);\n            setIsLoading(false);\n        };\n\n        fetch_data();\n    }, [page, search]);\n\n    // called when a user does a search with the searchBar component\n    const handleSearch = async (searchItem: string) => {\n        if (searchItem === '') {\n            setSearch('');\n            setPage(1);\n        } else {\n            setPage(1);\n            setSearch(searchItem);\n        }  \n    };\n\n    const updatePage = (page: number) => {\n        setPage(page);\n    };\n\n    const addItemToCart = (item: ItemType) => {\n        dispatch(addToCart(item, 1));\n    };\n\n    return (\n        <div className=\"container-fluid\">\n            <SearchBar handleSearch={handleSearch}/>\n            {items.length === 0 && !isLoading ? <h3 className=\"no-item\">No items matched your search</h3> : <Products items={items} toCart={addItemToCart} />};\n            <Pagination updatePage={updatePage} page={page} totalItems={totalItems} />\n        </div>\n        \n    );\n};\n\nexport default Home;","import React, { useState, useEffect } from 'react';\n\nimport itemServices from '../../../services/items';\nimport ProductsOnDeals from '../../products/Products';\nimport SearchBar from '../../searchbar/Searchbar';\nimport { useStateValue, addToCart } from '../../../state';\nimport './deals.css';\nimport Pagination from '../../pagination/Pagination';\nimport constants from '../../../utils/constants';\nimport { ItemType } from '../../../../types';\n\nconst Deals = () => {\n    const [ state, dispatch ] = useStateValue();\n    const [deals, setDeals] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [totalItems, setTotalItems] = useState(null);\n    const [page, setPage] = useState(1);\n    const [search, setSearch] = useState('');\n\n    useEffect(() => {\n        const fetch_deals = async () => {\n            // Calculate the \"from\" of the query params \n            const request_from = (page - 1) * constants.PAGE_SIZE;\n            // Query made to look for deals and from a certain number\n            const params = {\n                isOnSale: true,\n                from: request_from,\n                q:search\n            };\n            const response_deals = await itemServices.fetchItemList(params);\n            // Set the received deals\n            setDeals(response_deals.items);\n            // set number of pages\n            setTotalItems(response_deals.total);\n            \n            setIsLoading(false);\n        };\n\n        fetch_deals();\n    }, [page, search]);\n\n    // called when a user does a search with the searchBar component\n    const handleSearch = async (searchItem: string) => {\n        if (searchItem === '') {\n            setSearch('');\n        } else {\n            setSearch(searchItem);\n        } \n    };\n\n    const updatePage = (page: number) => {\n        setPage(page);\n    };\n\n    const addItemToCart = (item: ItemType) => {\n        dispatch(addToCart(item, 1));\n    };\n\n    // If it's no more loading but the deals state still has length 0, there are no deals in the backend\n    const deals_to_display = isLoading === false && deals.length === 0 ? <div className=\"noDeals\"><h1>No Deals available at the moment</h1></div> : <ProductsOnDeals toCart={addItemToCart} items={deals}/>;\n\n    return (\n            <div>\n                <SearchBar handleSearch={handleSearch}/>\n                <div className=\"row\">\n                    {deals.length === 0 && !isLoading ? <h3 className=\"no-item\">No Deals matched your search</h3> : deals_to_display}\n                </div>\n                <Pagination updatePage={updatePage} page={page} totalItems={totalItems} />\n            </div>\n    );\n};\n\nexport default Deals;","import React from 'react';\nimport './cartItem.css';\nimport {CartItemType} from '../../../../../types';\nimport {NotifyStateProp} from '../Cart';\n\ntype CartItemProp = {\n    item: CartItemType,\n    notify: (notification: NotifyStateProp) => void,\n    increaseItem: (item: CartItemType) => void,\n    decreaseItem: (item: CartItemType) => void,\n    remove: (id: string) => void,\n    // children: string\n};\n\nconst CartItem = ({item, notify, increaseItem, decreaseItem, remove,}: CartItemProp) => {\n    \n    const increase_quantity = () => {\n        if (item.quantity === item.stockCount) {\n            notify({\n                message: 'Insufficient stock!',\n                class: 'alert alert-danger'\n            });\n        } else {\n            if (item.quantity <= item.stockCount && item.quantity > 0) {\n                notify(undefined);\n            }\n            increaseItem(item);\n        }\n    };\n\n    const decrease_quantity = () => {\n        if (item.quantity <= 1) {\n            notify({\n                message: 'Invalid number of items',\n                class: 'alert alert-danger'\n            });\n        } else {\n            if (item.quantity <= item.stockCount && item.quantity > 0) {\n                notify(undefined);\n            }\n            decreaseItem(item);\n        }\n    };\n\n    const stockStyle = item.stockCount < 1 ? \"bg-danger \" : \"bg-success \";\n\n    const deleteIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"text-danger icon\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                       </svg>;\n    \n    const increaseIcon = <svg onClick={increase_quantity} xmlns=\"http://www.w3.org/2000/svg\" className=\"text-success icon\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 11l3-3m0 0l3 3m-3-3v8m0-13a9 9 0 110 18 9 9 0 010-18z\" />\n                        </svg>;\n    \n    const decreaseIcon = <svg onClick={decrease_quantity} xmlns=\"http://www.w3.org/2000/svg\" className=\"text-success icon\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 13l-3 3m0 0l-3-3m3 3V8m0 13a9 9 0 110-18 9 9 0 010 18z\" />\n                        </svg>;\n\n    return (\n        <li>\n            <div className=\"row cart-border row-sm-4\">\n                <div className=\"col-xs-4 d-flex justify-content-center col-sm-4 col-md-4 col-lg-3 px-sm-3\">\n                    <img className=\"card-img-top img center cart-img\" src={item.imageUrl} alt={item.name} />\n                </div>\n                <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4 px-sm-3\">\n                    <div className=\"row py-2\"><strong>{item.name}</strong></div>\n                    <div className=\"\">Available in stock: <span className={stockStyle + \"px-3 text-white\"}>{item.stockCount}</span></div>\n                    <div className=\"row py-2\">\n                        <div className=\"\">Quantity: <span className=\"quantity text-white py-1\">{item.quantity}</span></div>\n                        <div className=\"mt-2\"><span className=\"button text-danger\" onClick={() => remove(item.id)}>{deleteIcon}</span></div>\n                    </div>\n                    <div>\n                        {decreaseIcon}\n                        {increaseIcon}\n                    </div>\n                </div>\n                <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-5 px-sm-3\">\n                    <div className=\"d-flex justify-content-end\"><h4><strong>${item.totalPrice.toFixed(2)}</strong></h4></div>\n                </div>\n            </div>\n        </li>\n    );\n};\n\nexport default CartItem;","import React from 'react';\n\nconst CartNotification = ({message}: {message: string}) => {    \n    return <div className=\"text-center\">{message}</div>;\n};\n\nexport default CartNotification;","import axios from 'axios';\nimport { CartItemType } from '../../types';\n\nconst baseUrl = '/';\n\nlet token: string | null = null;\n\nconst setToken = (t: string) => {\n    token = t;\n};\n\nconst getCart = async (token: string) => {\n    const config = {\n        headers: { authorization: `bearer ${token}`}\n    };\n    console.log('config', config);\n    const response = await axios.get(`${baseUrl}cart`, config);\n    return response.data;\n};\n\nconst saveCart = async (cart: CartItemType[]) => {\n    const config = {\n        headers: { authorization: `bearer ${token}`}\n    };\n    console.log('config', config);\n    const response = await axios.post(`${baseUrl}cart/`, cart, config);\n    return response;\n};\n\nconst cartServices = { setToken, saveCart, getCart };\n\nexport default cartServices;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { \n    useStateValue,\n    increaseItemInCart,\n    decreaseItemInCart,\n    removeItemFromCart,\n    initiateState\n} from '../../../state';\nimport CartItem from './cartItem/CartItem';\nimport Notification from '../../notifications/Notification';\nimport cartServices from '../../../services/cart';\nimport './cart.css';\nimport { CartItemType } from '../../../../types';\n\n\nexport type NotifyStateProp = {\n    message: string,\n    class: string\n} | undefined;\n\nconst Cart = () => {\n    const [state, dispatch] = useStateValue();\n    const [notification, setNotification] = useState<NotifyStateProp>();\n\n    const cartItems = state.cart;\n\n    useEffect(() => {\n        // const loggedUser = window.localStorage.getItem('loggedUser');\n        // if (loggedUser) {\n        //     const user = JSON.parse(loggedUser);\n        //     // cartDispatch({type: cartTypes.SETCART, data: user.cart});\n        //     dispatch(increaseItemInCart(user.cart));\n        //     cartServices.setToken(user.token);\n        // }\n        if (cartItems.length === 0) {            \n            notify({\n                message: \"Cart empty for now\",\n                class: \"alert alert-danger\"\n            });\n        }\n    }, [dispatch, cartItems]);\n    \n    const notify = (notification: NotifyStateProp) => {\n        setNotification(notification);\n        setTimeout(() => {\n            setNotification(undefined);\n        }, 5000);\n    };\n\n    const history = useHistory();\n\n    const updateIncreaseCartItem = (item: CartItemType) => {\n        // Dispatch here to increase item in cart\n        dispatch(increaseItemInCart(item));\n    };\n\n    const updateDecreaseCartItem = (item: CartItemType) => {\n        // Dispatch here to decrease item in cart\n        // cartDispatch({type: cartTypes.DECREASECARTITEM, data: item});\n        dispatch(decreaseItemInCart(item));\n\n    };\n\n    const remove =(id: string) => {\n        //Dispatch here\n        // cartDispatch({type: cartTypes.REMOVEFROMCART, data: id});\n        console.log(\"Remove item from cart\");\n        \n        dispatch(removeItemFromCart(id));\n\n    };\n\n    const checkout = () => {\n        // cartDispatch({type: cartTypes.INITSTATE});\n        dispatch(initiateState());\n        history.push('/thankyou');\n    };\n\n    const saveCurrentcart = async () => {\n        const response = await cartServices.saveCart(cartItems);\n        if (response.status === 204) {\n            notify({\n                message: \"Cart saved succesfully\",\n                class: \"alert alert-success\"\n            });\n        }\n    };    \n\n    // Extract all total prices and compute the total price for all items in the cart\n    const total_prices_array = cartItems.map(cart_item => cart_item.totalPrice);\n    const all_total_prices = total_prices_array.length !== 0 ? total_prices_array.reduce((acc, current_val) => acc + current_val) : null;\n\n    return (<div className=\"row\">\n                <div className=\"col\">\n                    {notification ? <div className=\"row\">\n                                                <div className={`col-sm-6 offset-sm-3 ${notification.class}`} role=\"alert\">\n                                                    <Notification message={notification.message} />\n                                                </div>\n                                            </div> : null}\n                    <div className=\"row\">\n                        <div className=\"col py-5 mx-4\">\n                            <div className=\"row\">\n                                <div className=\"col-sm-8 offset-sm-2 p-0\">\n                                    <h1 className=\"py-5\">Shopping Cart</h1>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-xs-8 offset-xs-2 col-sm-10 offset-sm-1 col-md-8 offset-md-2\">\n                                    <ul className=\"list-group cart-list\">\n                                        {cartItems.map(item => {\n                                            return <CartItem\n                                                        key={item.id}\n                                                        item={item}\n                                                        notify={notify}\n                                                        increaseItem={updateIncreaseCartItem}\n                                                        decreaseItem={updateDecreaseCartItem}\n                                                        remove={remove}\n                                                    />;\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-xs-8 offset-xs-2 col-sm-10 offset-sm-1 col-md-8 offset-md-2\">\n                                    <div className=\"row py-5\">\n                                        <div className=\"col\"><button className=\"btn btn-lg checkout-btn\" onClick={checkout}><strong>Checkout</strong></button></div>\n                                        <div className=\"col\"><button className=\"btn btn-lg saveCart-btn\" onClick={saveCurrentcart}><strong>Save cart</strong></button></div>\n                                        <div className=\"col d-flex justify-content-end \"><h4><strong>Total: ${all_total_prices}</strong></h4></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>);\n};\n\nexport default Cart;","import React, { useState, useEffect } from \"react\";\nimport { useStateValue, addToCart } from \"../../../state\";\nimport { useParams } from 'react-router-dom';\nimport { CartItemType, ItemType } from \"../../../../types\";\nimport services from \"../../../services/items\";\nimport ProductStars from '../../stars/ProductStars';\nimport Notification from '../../notifications/Notification';\nimport './item.css';\n\nconst Item = () => {\n    \n    const [state, dispatch] = useStateValue();\n    const [item, setItem] = React.useState<ItemType>();\n    const [item_number, setItemNumber] = useState(1);\n    const [error_displayed, setErrorMessage] = useState('');\n    const [addedToCartMessage, setAddedToCartMessage] = useState(false);\n    \n\n    // Used to check if this item? is already in the cart and display the message\n    const itemInCart = state.cart.find(cartItem => {\n        return cartItem.id === item?.id;\n    });\n\n    const params = useParams<{ id: string }>();\n    // const item = itemState;\n\n    useEffect(() => {\n        const fetch_item = async () => {            \n            const fetched_item = await services.getItem(params.id);\n            setItem(fetched_item);\n        };\n        fetch_item();\n    }, [params.id]);\n\n    useEffect(() => {\n        if (item) {\n            if (item.stockCount < 1) {\n                setErrorMessage('Item no longer in stock');\n            }\n        }\n    }, []);\n\n    const increase_quantity = () => {\n        if (item_number === item?.stockCount) {\n            setErrorMessage('Insufficient stock!');\n        } else {\n            if (item && item_number <= item?.stockCount && item_number > 0) {\n                setErrorMessage('');\n            }\n            setItemNumber(item_number+1);\n        }\n    };\n\n    const decrease_quantity = () => {\n        if (item_number <= 1) {\n            setErrorMessage('Invalid number of items');\n        } else {\n            if (item && item_number <= item.stockCount && item_number > 0) {\n                setErrorMessage('');\n            }\n            setItemNumber(item_number-1);\n        }\n    };\n    const addItemToCart = () => {\n        // Dispatch here\n        // dispatch({type: cartTypes.ADDTOCART, data: {...item?, item_number}});\n        if (item) {\n            dispatch(addToCart(item, item_number));\n            setAddedToCartMessage(true);\n            setItem({...item, stockCount: item?.stockCount-item_number});\n            setTimeout(() => {\n                setAddedToCartMessage(false);\n            }, 5000);\n        }\n    };\n\n    const stockStyle = item && item.stockCount < 1 ? \"bg-danger \" : \"bg-success \";\n\n    // disable the button if stockCount is 0\n    const disable = item?.stockCount === 0 ? true : false;\n    const disableClass = item?.stockCount === 0 ? 'disable-btn' : 'enable-btn';\n\n    return (\n        // <div></div>\n        <div className='col'>\n            <div className='row text-center'>\n                {addedToCartMessage && \n                    <div className=\"col-md-6 offset-md-3 alert alert-success\" role=\"alert\">\n                        <Notification message={`Added ${item_number} ${item?.name} to Cart`} />\n                    </div>\n                }\n            </div>\n            <div className='row item description'>\n                <div className=\"col-sm image_wrapper d-flex justify-content-end\">\n                    <img className=\"float-sm-right\" src={item?.imageUrl} alt={item?.name}/>\n                </div>\n                <div className=\"col-sm\">\n                    <p><strong>{item?.name}</strong></p>\n                    <div><ProductStars average_rating={item ? item.avgRating : 0} /></div>\n                    <hr className=\"line\"></hr>\n                    <p>{item?.description}</p>\n                    <p className=\"my-3\"><strong>${item?.price}</strong></p>\n                    <div className=\"my-3\">Available in stock: <span className={stockStyle + \"px-3 py-1 text-white\"}>{item?.stockCount}</span></div>\n                    <div>Quantity: <span className=\"quantity text-white\">{item_number}</span></div>\n                    <div className=\"my-3 d-flex justify-content-between control-btn\">\n                        <button className=\"bg-primary\" onClick={decrease_quantity}>-</button>\n                        <button className=\"bg-primary\" onClick={increase_quantity}>+</button>\n                    </div>\n                    <div className=\"my-3\"><button className={disableClass} onClick={addItemToCart} disabled={disable}>Add to Cart</button></div>\n                    {error_displayed && <div className=\"alert alert-danger\" role=\"alert\"><Notification message={error_displayed} /></div>}\n                    {itemInCart && <div className=\"available_in_cart\">1 of this item? is currently in your cart</div>}\n                </div>\n            </div>\n        </div>\n    );\n    \n};\n\nexport default Item;","import React, { useState } from 'react';\nimport Notification from '../../notifications/Notification';\nimport { upload } from '../../../services/items';\nimport { NewItem } from '../../../../types';\n\nconst Admin = () => {\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState<string>('');\n    const [avgRating, setAvgRating] = useState<number>(0);\n    const [isOnSale, setIsOnsale] = useState<boolean>(false);\n    const [stockCount, setStockCount] = useState<number>(0);\n    const [price, setPrice] = useState<number>(0);\n    const [image, setImage] = useState<File>();\n    const [notification, setNotification] = useState<{message: string, class: string}>();\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const element:any = document.getElementById('isOnSale');\n    let isChecked;\n    if (element) {\n        isChecked = element.checked;\n    }\n\n    if (isChecked) {\n        setIsOnsale(true);\n    }\n    \n    const onFormSubmit = async (event: React.FormEvent<HTMLInputElement>) => {\n        event.preventDefault();\n        const item: NewItem = {\n            name: name,\n            description: description,\n            avgRating: avgRating,\n            isOnSale: isOnSale,\n            stockCount: stockCount,\n            price: price,\n            image: image\n        };\n\n        // creating the form\n        const formData = new FormData();\n\n        for (const property in item) {\n            formData.append(property, name);\n        }\n\n        await upload(formData);\n        setNotification({message: \"Item saved successfully\", class: \"alert alert-success\"});\n        setTimeout(() => {\n            setNotification(undefined);\n        }, 5000);\n    };\n\n    return (\n        <div className='container'>\n            {notification ? <div className=\"row\">\n                                <div className={`col-sm-6 offset-sm-3 ${notification.class}`} role=\"alert\">\n                                    <Notification message={notification.message} />\n                                </div>\n                            </div> \n                           : null\n            }\n            <h2 className=\"my-5 text-center\">Here is the admin to manage products</h2>\n            <div><h4>Create New Product</h4></div>\n            <form className=\"p-5 border border-primary\" id=\"form\">\n                <div className=\"form-group row\">\n                    <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">Product Name</label>\n                    <div className=\"col-sm-6\">\n                        <input type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"Name the item here\" onChange={(e) => setName(e.target.value)} />\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <label htmlFor=\"description\" className=\"col-sm-2 col-form-label\">Description</label>\n                    <div className=\"col-sm-6\">\n                        <input type=\"text\" className=\"form-control\" id=\"description\" placeholder=\"Describe the item\"  onChange={(e) => setDescription(e.target.value)} />\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <label htmlFor=\"rating\" className=\"col-sm-2 col-form-label\">Rating</label>\n                    <div className=\"col-sm-6\">\n                        <input type=\"number\" id=\"rating\" name=\"rating\" min=\"1\" max=\"5\"  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setAvgRating(Number(e.target.value))} />\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <label htmlFor=\"isOnSale\" className=\"col-sm-2 col-form-label\">On Sale</label>\n                    <div className=\"col-sm-6\">\n                        <input  type=\"checkbox\" id=\"isOnSale\" name=\"onSale\" />\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <label htmlFor=\"stockCount\" className=\"col-sm-2 col-form-label\">Stock count</label>\n                    <div className=\"col-sm-6\">\n                        <input type=\"number\" id=\"stockCount\" name=\"stockCount\" min='1' max='2000'  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setStockCount(Number(e.target.value))} />\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <label htmlFor=\"price\" className=\"col-sm-2 col-form-label\">Price</label>\n                    <div className=\"col-sm-6\">\n                        <input type=\"number\" id=\"price\" name=\"stockCount\"  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPrice(Number(e.target.value))} />\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <label htmlFor=\"image\" className=\"col-sm-2 col-form-label\">Price</label>\n                    <div className=\"col-sm-6\">\n                        <input type=\"file\" id=\"image\" name=\"item\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => setImage(e.target.files![0])} />\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-sm-10 offset-sm-2\">\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={() => onFormSubmit}>Submit</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Admin;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './thankyou.css';\n\nconst thankyou = () => {\n    return <div className=\"container thankyou-message\">\n        <div className='row center'>\n            <h1>Thank you for your purchase!</h1>\n        </div>\n        <div className='row center message'>\n            Your order will be on its way shortly. In the mean time, please feel free to continue shopping!\n        </div>\n        <div className='row'>\n            <Link className=\"center return-home\" to='/'>Return to Home</Link>\n        </div>\n    </div>;\n};\n\nexport default thankyou;","import axios from 'axios';\nimport { User, SignupUser } from '../../types';\n\nconst baseUrl = '/';\n\nexport interface LoginProp {\n    email: string,\n    password: string\n    username?: string\n}\n\nconst login = async (credentials: any) => {\n    const response = await axios.post<User>(`${baseUrl}login`, credentials);\n    return response.data;\n};\n\nconst signup = async (newUser: any) => {\n    const response = await axios.post(`${baseUrl}login`, newUser);\n    return response.data;\n};\n\nconst userServices = {login, signup};\n\nexport default userServices;","import React, {useState} from 'react';\nimport Notification from '../../notifications/Notification';\nimport { Link } from 'react-router-dom';\nimport userService from '../../../services/user';\nimport cartServices from '../../../services/cart';\nimport { setCart, setUser, useStateValue } from '../../../state';\n\nimport './login.css';\nimport { useHistory } from 'react-router';\n\nconst Login = () => {\n    const [state, dispatch ] = useStateValue();\n    const [notification, setNotification] = useState<{message: string, class: string}>();\n    const [email, setEmail] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const [rememberMe, setRememberMe] = useState<boolean>(false);\n\n\n    const history = useHistory();\n\n    const notify = (notification: {message: string, class: string}) => {\n        setNotification(notification);\n        setTimeout(() => {\n            setNotification(undefined);\n        }, 5000);\n    };\n\n    const handleLogin = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        try {\n            const user = await userService.login({email, password});\n            cartServices.setToken(user.token);\n            const cart = await cartServices.getCart(user.token);\n            user.cart = cart;\n            if (rememberMe) {\n                window.localStorage.setItem('loggedUser', JSON.stringify(user));   \n            }\n            // dispatch({type: userTypes.SETUSER, data: user});\n            dispatch(setUser(user));\n            dispatch(setCart(cart));\n            setEmail('');\n            setPassword('');\n            history.push('/');\n            \n        } catch (error) {\n            console.log(error);\n            notify({\n                message: \"Invalid username or password\",\n                class: \"alert alert-danger\"\n            });\n        }\n    };\n\n    return (\n        <div className=\"container signin\">\n        {notification ? <div className=\"row\">\n                                                <div className={`col-sm-6 offset-sm-3 ${notification.class}`} role=\"alert\">\n                                                    <Notification message={notification.message} />\n                                                </div>\n                                            </div> : null}\n            <form className=\"form-signin\" onSubmit={handleLogin}>\n                <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n                <label htmlFor=\"inputEmail\" className=\"sr-only mb-2\">Email address</label>\n                    <input \n                        type=\"email\" \n                        id=\"inputEmail\" \n                        className=\"form-control mb-3\" \n                        placeholder=\"Email address\" \n                        required autoFocus\n                        onChange={(e) => setEmail(e.target.value)}\n                        />\n                <label htmlFor=\"inputPassword\" className=\"sr-only mb-2\">Password</label>\n                    <input \n                        type=\"password\" \n                        id=\"inputPassword\" \n                        className=\"form-control mb-3\" \n                        placeholder=\"Password\" \n                        required \n                        onChange={(e) => setPassword(e.target.value)}\n                        />\n                <div className=\"checkbox mb-3\">\n                    <label>\n                        <input type=\"checkbox\" value=\"remember-me\" onChange={() => {setRememberMe(true);}}/> Remember me\n                    </label>\n                </div>\n                <div className=\"d-flex justify-content-center\"><button id=\"login-button\" className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button></div>\n            </form>\n\n            <div className=\"m-3\"><small>Don&quot;t yet have an account ? <Link to='/signup'>Sign up</Link> here</small></div>\n        </div>\n    );\n};\n\nexport default Login;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n// import { User } from '../../../../types';\n\nconst ProtectedRoute = ({component: Component, user, ...rest}: any) => {\n\n    if (!user) {\n        return <Redirect to={\n            {\n              pathname: '/login'\n            }\n        } />;\n    } else if (user.role === \"admin\") {\n        return (\n            <Route {...rest} render={\n                props => <Component {...rest} {...props} />\n            }></Route>\n        );\n    } else {\n        return <Redirect to={\n            {\n              pathname: '/unauthorized',\n            }\n        } />;\n    }\n};\n\nexport default ProtectedRoute;","import React from 'react';\n\nconst unAuthorized = () => {\n\n    return (\n        <div className=\"container\">\n            <h2 className=\"mx-auto\">Only administrators are authorized to come here</h2>\n        </div>\n    );\n};\n\nexport default unAuthorized;","import React, {useState} from 'react';\nimport Notification from '../../notifications/Notification';\nimport { Link } from 'react-router-dom';\nimport userService from '../../../services/user';\nimport { setUser, useStateValue } from '../../../state';\n\nimport './signup.css';\nimport { useHistory } from 'react-router';\n\nconst Signup = () => {\n    const [state, dispatch ] = useStateValue();\n    const [notification, setNotification] = useState<{message: string, class: string}>();\n    const [email, setEmail] = useState<string>('');\n    const [name, setName] = useState<string>('');\n    const [username, setUsername] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const [rememberMe, setRememberMe] = useState<boolean>(false);\n\n    const history = useHistory();\n\n    const notify = (notification: {message: string, class: string}) => {\n        setNotification(notification);\n        setTimeout(() => {\n            setNotification(undefined);\n        }, 5000);\n    };\n\n    const handleSignup = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        try {\n            const user = await userService.signup({name, username, email, password});\n            if (rememberMe) {\n                window.localStorage.setItem('loggedUser', JSON.stringify(user));   \n            }\n            console.log(user);\n            \n            // dispatch({type: userTypes.SETUSER, data: user});\n            dispatch(setUser(user));\n            setEmail('');\n            setPassword('');\n            setPassword('');\n            history.push('/');\n            \n        } catch (error: any) {\n            console.log(error);\n            notify({\n                message: error.message,\n                class: \"alert alert-danger\"\n            });\n        }\n    };\n\n    return (\n        <div>\n            {notification ? <div className=\"row\">\n                                                <div className={`col-sm-6 offset-sm-3 ${notification.class}`} role=\"alert\">\n                                                    <Notification message={notification.message} />\n                                                </div>\n                                            </div> : null}\n        <div className=\"d-flex justify-content-center\">\n            <form className=\"signup\" onSubmit={handleSignup}>\n                <div className=\"d-flex justify-content-center\"><h3>Create Account</h3></div>\n                <div className=\"form-row d-flex my-2\">\n                    <div className=\"form-group col-md-6 mx-2\">\n                        <label htmlFor=\"inputEmail4\">Name</label>\n                        <input type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"Name\" onChange={(e) => setName(e.target.value)}/>\n                    </div>\n                    <div className=\"form-group col-md-6 mx-2\">\n                        <label htmlFor=\"inputPassword4\">Username</label>\n                        <input type=\"password\" className=\"form-control\" id=\"username\" placeholder=\"username\" onChange={(e) => setUsername(e.target.value)}/>\n                    </div>\n                </div>\n\n                <div className=\"form-row d-flex my-2\">\n                    <div className=\"form-group col-md-6 mx-2\">\n                        <label htmlFor=\"inputEmail4\">Email</label>\n                        <input type=\"email\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)}/>\n                    </div>\n                    <div className=\"form-group col-md-6 mx-2\">\n                        <label htmlFor=\"inputPassword4\">Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"inputPassword\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)}/>\n                    </div>\n                </div>\n \n                <div className=\"d-flex justify-content-center m-2\"><button type=\"submit\" className=\"btn btn-primary\">Create Account</button></div>\n            </form>\n        </div>\n        </div>\n    );\n};\n\nexport default Signup;","import React, {useEffect} from 'react';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/navbar/Navbar';\nimport './App.css';\nimport Home from './components/pages/home/Home';\nimport Deals from './components/pages/deals/Deals';\nimport Cart from './components/pages/cart/Cart';\nimport Item from './components/pages/item_page/Item';\nimport Admin from './components/pages/admin/Admin';\nimport { setCart, setUser, useStateValue } from './state';\nimport Thankyou from './components/pages/thankyou/Thankyou';\nimport Login from './components/pages/login/Login';\nimport cartService from './services/cart';\nimport ProtectedRoute from './components/pages/protected/ProtectedRoute';\nimport UnAuthorized from './components/pages/unauthorized/unAuthorized';\nimport Signup from './components/pages/signup/Signup';\n\nconst App = () => {\n  // Using states here to set them from local storage when the opens the app\n  const [ state,  dispatch ] = useStateValue();\n\n  useEffect(() => {\n    const loggedUser = window.localStorage.getItem('loggedUser');\n    if (loggedUser) {\n      const user = JSON.parse(loggedUser);\n      dispatch(setUser(JSON.parse(loggedUser)));\n      dispatch(setCart(JSON.parse(loggedUser).cart));\n      // set the user's token for making requests to backend\n      cartService.setToken(user.token);\n    }\n  }, []);\n\n  return (\n        <div>\n          <Router>\n            <Navbar />\n            <Switch>\n              <Route exact path='/'>\n                <Home />\n              </Route>\n              <Route path='/deals'>\n                <Deals />\n              </Route>\n              <Route path='/cart'>\n                <Cart />\n              </Route>\n              <Route path='/item/:id'>\n                <Item />\n              </Route>\n\n              <ProtectedRoute path='/admin' user={state.user} component={Admin} />\n\n              <Route path='/thankyou'>\n                <Thankyou />\n              </Route>\n              <Route path='/login'>\n                <Login />\n              </Route>\n              <Route path='/signup'>\n                <Signup />\n              </Route>\n              <Route path='/unauthorized'>\n                <UnAuthorized />\n              </Route>\n            </Switch>\n          </Router>\n        </div>   \n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { StateProvider } from './state';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <StateProvider>\n    <App />\n  </StateProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}